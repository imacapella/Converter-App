/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.mavenproject;

/**
 *
 * @author merty
 */


import java.awt.Image;
import java.io.File;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
public class HomePage extends javax.swing.JFrame  {
    Singleton singleton = Singleton.getInstance();
    boolean success = Singleton.getInstance().isSuccess();
    JFileChooser fileChooser = Singleton.getInstance().getFileChooser();
    String fileName = Singleton.getInstance().getFileName();
    String fileExtension = Singleton.getInstance().getFileExtension(singleton.selectedFile);
    String comboBoxSelection = Singleton.getInstance().getComboBoxSelection();
    String totalName = Singleton.getInstance().getTotalName();
    File selectedFile = Singleton.getInstance().getSelectedFile();
    File previousFile = Singleton.getInstance().getPreviousFile();
    String previousExtension = Singleton.getInstance().getPreviousExtension();
    FileMementoManager mementoManager = Singleton.getInstance().getMementoManager();
    
    /**
     * Creates new form NewJFrame
     */
    
    public HomePage() {
        initComponents();
        
        //mementoManager = new FileMementoManager();
        
       
    }
    
    public static boolean convert(){
        Singleton singleton = Singleton.getInstance();
        singleton.fileExtension = Singleton.getInstance().getFileExtension(singleton.selectedFile);
        singleton.totalName = Singleton.getInstance().getTotalName();
        singleton.fileName = Singleton.getInstance().getFileName();
        singleton.comboBoxSelection = Singleton.getInstance().getComboBoxSelection();
        singleton.selectedFile = Singleton.getInstance().getSelectedFile();
        singleton.success = Singleton.getInstance().isSuccess();

        if (singleton.selectedFile != null && !singleton.fileExtension.isEmpty()) {
            //String originalFileName = singleton.fileName; 
            singleton.totalName = singleton.fileName + singleton.comboBoxSelection;
            File newFile = new File(singleton.totalName);

            //singleton.setUsername(usrTextField.getText());
            singleton.success = singleton.selectedFile.renameTo(newFile);
            System.out.println("success");
            if (singleton.success) {
            singleton.selectedFile = newFile;
            //FileMemento memento = new FileMemento(selectedFile, fileExtension);
            //mementoManager.addMemento(memento);  
        }else{
                
        }
    } else {
        JOptionPane.showMessageDialog(null, "Please select a file then an extension", "Warning", JOptionPane.INFORMATION_MESSAGE);
        System.out.println("");
        }
        return singleton.success;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jFileChooser1 = new javax.swing.JFileChooser();
        convertButton = new javax.swing.JButton();
        Dosyasec = new javax.swing.JButton();
        fileNameLabel = new javax.swing.JLabel();
        extensionLabel = new javax.swing.JLabel();
        undo = new javax.swing.JButton();
        redo = new javax.swing.JButton();
        comboBoxExtensions = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();

        jFileChooser1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jFileChooser1ActionPerformed(evt);
            }
        });

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(549, 427));
        setMinimumSize(new java.awt.Dimension(549, 427));
        setPreferredSize(new java.awt.Dimension(549, 427));

        convertButton.setFont(new java.awt.Font("Century Schoolbook", 3, 12)); // NOI18N
        convertButton.setText("Convert");
        convertButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                convertButtonActionPerformed(evt);
            }
        });

        Dosyasec.setFont(new java.awt.Font("Century Schoolbook", 3, 14)); // NOI18N
        Dosyasec.setText("Choose  File");
        Dosyasec.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, new java.awt.Color(0, 0, 0), java.awt.Color.black, java.awt.Color.black));
        Dosyasec.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DosyasecActionPerformed(evt);
            }
        });

        undo.setFont(new java.awt.Font("Century Schoolbook", 3, 12)); // NOI18N
        undo.setText("undo");
        undo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                undoActionPerformed(evt);
            }
        });

        redo.setFont(new java.awt.Font("Century Schoolbook", 3, 12)); // NOI18N
        redo.setText("redo");
        redo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                redoActionPerformed(evt);
            }
        });

        comboBoxExtensions.setFont(new java.awt.Font("Segoe UI", 3, 12)); // NOI18N
        comboBoxExtensions.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { ".png", ".jpg", ".jpeg", ".wepb", ".docx", ".pdf", ".xml", ".mp4", ".avif", ".mp3", ".mov" }));
        comboBoxExtensions.setSelectedIndex(-1);
        comboBoxExtensions.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black, java.awt.Color.black));
        comboBoxExtensions.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboBoxExtensionsActionPerformed(evt);
            }
        });

        jLabel2.setFont(new java.awt.Font("Segoe UI", 2, 10)); // NOI18N
        jLabel2.setText("Perform Your Conversion Operations with One Click");

        jLabel1.setIcon(new javax.swing.ImageIcon(System.getProperty("user.dir")+"\\src\\main\\java\\images\\softCreamy.png"));
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(59, 59, 59)
                        .addComponent(convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 114, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(21, 21, 21)
                                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(fileNameLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addGap(18, 18, 18)
                                                .addComponent(extensionLabel, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                                .addComponent(undo)
                                                .addGap(90, 90, 90))))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addGroup(layout.createSequentialGroup()
                                            .addContainerGap()
                                            .addComponent(redo, javax.swing.GroupLayout.PREFERRED_SIZE, 83, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                            .addGap(32, 32, 32)
                                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                .addComponent(comboBoxExtensions, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                .addComponent(Dosyasec, javax.swing.GroupLayout.PREFERRED_SIZE, 172, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 231, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(26, 26, 26)))
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 315, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(61, 61, 61)
                .addComponent(Dosyasec, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(14, 14, 14)
                .addComponent(comboBoxExtensions, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(fileNameLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(extensionLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(27, 27, 27)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(undo)
                    .addComponent(redo))
                .addGap(36, 36, 36)
                .addComponent(convertButton, javax.swing.GroupLayout.PREFERRED_SIZE, 41, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void convertButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_convertButtonActionPerformed
     Singleton singleton = Singleton.getInstance();
     convert();
     if(true){
       singleton.notifySuccess();
       JOptionPane.showMessageDialog(null, "Dönüştürme başarıyla tamamlandı.", "Başarı", JOptionPane.INFORMATION_MESSAGE);
     }
        else{
         singleton.notifyFailure();
         JOptionPane.showMessageDialog(null, "Dönüştürme başarısız oldu.", "Başarısızlık", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_convertButtonActionPerformed

    private void jFileChooser1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jFileChooser1ActionPerformed
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jFileChooser1ActionPerformed

    private void DosyasecActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DosyasecActionPerformed
        Singleton singleton = Singleton.getInstance();
        singleton.fileExtension = Singleton.getInstance().getFileExtension(singleton.selectedFile);      
        singleton.fileName = Singleton.getInstance().getFileName();
        singleton.comboBoxSelection = Singleton.getInstance().getComboBoxSelection();
        singleton.selectedFile = Singleton.getInstance().getSelectedFile();
        singleton.success = Singleton.getInstance().isSuccess();
        singleton.fileChooser = new JFileChooser(); 
        
        int result = singleton.fileChooser.showOpenDialog(null);
        
     
       if (result == JFileChooser.APPROVE_OPTION) {
           singleton.setComboBoxSelection((String) comboBoxExtensions.getSelectedItem());  
           
           singleton.setSelectedFile(singleton.fileChooser.getSelectedFile()); 
           
        
           singleton.setFileName(singleton.selectedFile.getName());
           

            int dotIndex = singleton.fileName.lastIndexOf("."); 
            

    
          if (dotIndex > 0) {    
                singleton.setFileName(singleton.fileName.substring(0, dotIndex));                    
            }            
            singleton.setFileExtension(singleton.getFileExtension(singleton.selectedFile));          
            fileNameLabel.setText(singleton.fileName);   
            extensionLabel.setText("."+singleton.getFileExtension(singleton.selectedFile));
            FileMemento memento = new FileMemento(singleton.selectedFile, singleton.fileExtension);
            mementoManager.addMemento(memento); 
}
       else if (result == JFileChooser.CANCEL_OPTION) {
    System.out.println("Dosya seçimi iptal edildi.");
}
    
    }//GEN-LAST:event_DosyasecActionPerformed

    private void undoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_undoActionPerformed
        int undoCount = 1;
        FileMemento previousMemento = singleton.mementoManager.getPreviousMemento(undoCount);

    if (previousMemento != null) {
        selectedFile = previousMemento.getFile();
        fileExtension = previousMemento.getExtension();
        fileName = selectedFile.getName();

        int dotIndex = fileName.lastIndexOf(".");
        if (dotIndex > 0) {
            fileName = fileName.substring(0, dotIndex);
        }

        fileNameLabel.setText(singleton.fileName);
        extensionLabel.setText("." + singleton.fileExtension);
    } else {
        // Önceden dosya açılmadıysa yazılan yerin temizlenmesi
        selectedFile = null;
        fileName = "";
        fileExtension = "";
        fileNameLabel.setText("");
        extensionLabel.setText("");
        
        return;  // Bu noktada metodu sonlandırarak aşağıdaki kodların çalışmasını engelliyoruz
    }
    // Dönüştür düğmesini etkinleştirme durumunu güncelle
    convertButton.setEnabled(selectedFile != null && !fileExtension.isEmpty());
     
       
    }//GEN-LAST:event_undoActionPerformed

    private void redoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_redoActionPerformed
        
    FileMemento nextMemento = mementoManager.getNextMemento();

    if (nextMemento != null) {
        selectedFile = nextMemento.getFile();
        fileExtension = nextMemento.getExtension();
        fileName = selectedFile.getName();

        int dotIndex = fileName.lastIndexOf(".");
        if (dotIndex > 0) {
            fileName = fileName.substring(0, dotIndex);
        }

        fileNameLabel.setText(fileName);
        extensionLabel.setText("." + fileExtension);


   } else {
    fileNameLabel.setText(fileName);
        extensionLabel.setText("." + fileExtension);
    }     
    }//GEN-LAST:event_redoActionPerformed

    private void comboBoxExtensionsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboBoxExtensionsActionPerformed
        Singleton singleton = Singleton.getInstance();
        singleton.setComboBoxSelection((String) comboBoxExtensions.getSelectedItem());           
    }//GEN-LAST:event_comboBoxExtensionsActionPerformed


     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomePage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomePage().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Dosyasec;
    private javax.swing.JComboBox<String> comboBoxExtensions;
    private javax.swing.JButton convertButton;
    private javax.swing.JLabel extensionLabel;
    private javax.swing.JLabel fileNameLabel;
    private javax.swing.JFileChooser jFileChooser1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JButton redo;
    private javax.swing.JButton undo;
    // End of variables declaration//GEN-END:variables
}
